import { Notice, TFile, Vault } from 'obsidian';

export async function openTaskFile(path: string, vault: Vault): Promise<void> {
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –ø–æ –ø—É—Ç–∏
        const file = vault.getAbstractFileByPath(path);

        if (!file) {
            new Notice(`File not found: ${path}`);
            return;
        }

        if (!(file instanceof TFile)) {
            new Notice(`The following path is not a file: ${path}`);
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –ª–∏—Å—Ç (–≤–∫–ª–∞–¥–∫—É)
        const leaf = this.app.workspace.getLeaf();

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
        await leaf.openFile(file, { active: true });

    } catch (error) {
        console.error('Error opening file:', error);
        new Notice(`Failed to open file: ${path}`);
    }
}

export function getTaskTypeIcon(type: string): string {
    const icons: Record<string, string> = {
        "book": "üìö",
        "article": "üìÑ",
        "course": "üéì",
        "video": "‚ñ∂Ô∏è",
        "podcast": "üéß"
    };
    return icons[type] || "‚úèÔ∏è";
}
